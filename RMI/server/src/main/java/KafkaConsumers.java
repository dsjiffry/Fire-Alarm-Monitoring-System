 
import java.time.Duration;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Properties;
import org.apache.kafka.clients.consumer.ConsumerConfig;
import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.apache.kafka.clients.consumer.ConsumerRecords;
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.apache.kafka.common.serialization.StringDeserializer;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class KafkaConsumers {

	public static void main(String[] args) {
		System.out.println("Hello World");

		Logger logger = LoggerFactory.getLogger(KafkaConsumers.class.getName());

		String bootstrapServer = "127.0.0.1:9092";
		String grp_id = "desktop-kafka";
		String topic = "sensor1";

		Properties properties = new Properties();
		properties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServer);
		properties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());
		properties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());
		properties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, grp_id);
		properties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, "earliest");

		KafkaConsumer<String, String> consumer = new KafkaConsumer<String, String>(properties);
		
		
		//Array List Of All the topics 
		//There is a topic for each sensorUID
		ArrayList<String> topics = new ArrayList<String>();
		
		
		//Grab them from the API using a get request to 
		//http://localhost:5000/api/getSensorsByUsername/shehan 
		//You get the sensor types , room , floor , status  and sensorUID all registered under the username
		
		
		//Make sure All kafka , zookeper servers are running and  run sensor clients to generate sensor readings 
		
		// Add the sensor UID s here to topics list 
		topics.add("sensor1");
		topics.add("sensor2");
		
		
		consumer.subscribe(topics);
		
		//This loop continuesly listens to Kafka Stream , Adjust the poll duration to desired update frequency
		while (true) {
			ConsumerRecords<String, String> records = consumer.poll(Duration.ofMillis(100));
			for (ConsumerRecord<String, String> record : records) {
				
				//You get SensorUID as record.topic() and a JSON object wich contain
				// 1) reading 
				// 2) Time stamp generated by java script Date() function 
				// 3) Parse the JSON (record.value() ) and use the values together with the information you got from 
				//		The api above to update UI 
				System.out.println("topic: " + record.topic() + ", Value:" + record.value());
			}

		}
	}
}
