
How to run this System:

	This requires mongodb as the dabase solution so make sure it is up and running.
	import the "users.json" through either a GUI or using the command:
	"mongoimport --db Fire_Alarm_Authentication --collection Users --file users.json"
	
	Start up the Authentication Service by running "npm install" then "npm start" inside the "Authentication Service" folder
	Start up the Alert Service by running "npm install" then "npm start" inside the "Alert Service" folder.
	
	The rmi registry will be auto started by the RMI server.
	Start the RMI Server by opening cmd in the root folder and running "java -jar ./RMI/server/target/rmiServer-0.0.1-SNAPSHOT-jar-with-dependencies.jar"
	
	go to \RMI\client
	run " mvn exec:java -Dexec.mainClass="forms.Login" " in cmd.
	Login using the username and password as "admin".
	
How to Run Sensor Service
	
	Pre Requisites :
		Docker version 19.x 
		docker-compose version 1.25.x
		Node v13.6.x
		npm 6.13.6
	
	Before Installation
		
		make Sure their are no running docker container instances of 
		apache kafka, zookeper or mongoDB
		
		If exist stop containers using following steps 
		
		1) get contianer ID of each container using 
		
			docker ps -a 
			
		2) then stop containers
		
			docker stop <zookeper_id> <kafka_id> <mongo_id>
		
		3) Remove containers 
			
			docker rm <zookeper_id> <kafka_id> <mongo_id>
	
	Installation 
	
		1) Navigate into the Sensor_Service directory in a command line
		
		2) Run The docker compose file 
			
			docker-compose -f zk-single-kafka-single.yml up
			
	Checking 
	
		1) docker ps -a 
			There should be 3 containers , 
				zookeper , kafka and mongodb
		
	Running The Sensor Server
	
		1) Navigate into the Sensor_Service directory in a command line
		
		2) RUN npm install
			
		3) RUN npm start
		
		
How to Run Sensors (Sensor Clients)

		1) Navigate into the Sensor_Service/sensor_client directory in a command line
		
		2) Run npm install
		
		3) To run a sensor with specific SensorID
		
			node sensor_client.js <SensorID>
			
			eg: node sensor_client sensor1
		
		
		
		
		

	
